{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/bradyfox/projects/portfolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    @media (max-width: \", \"em) {\\n      \", \";\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css } from 'styled-components';\nvar Sizes = {\n  giant: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330\n}; // iterate through the sizes and create a images template\n\nexport var Images = Object.keys(Sizes).reduce(function (accumulator, label) {\n  var emSize = Sizes[label] / 16;\n\n  accumulator[label] = function () {\n    return css(_templateObject(), emSize, css.apply(void 0, arguments));\n  };\n\n  return accumulator;\n}, {});\nexport default Images;","map":{"version":3,"sources":["/Users/bradyfox/projects/portfolio/src/styles/Images.js"],"names":["css","Sizes","giant","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","Images","Object","keys","reduce","accumulator","label","emSize"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,IADK;AAEZC,EAAAA,UAAU,EAAE,IAFA;AAGZC,EAAAA,OAAO,EAAE,IAHG;AAIZC,EAAAA,MAAM,EAAE,GAJI;AAKZC,EAAAA,KAAK,EAAE,GALK;AAMZC,EAAAA,OAAO,EAAE,GANG;AAOZC,EAAAA,KAAK,EAAE,GAPK;AAQZC,EAAAA,IAAI,EAAE;AARM,CAAd,C,CAWA;;AACA,OAAO,IAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBY,MAAnB,CAA0B,UAACC,WAAD,EAAcC,KAAd,EAAwB;AACtE,MAAMC,MAAM,GAAGf,KAAK,CAACc,KAAD,CAAL,GAAe,EAA9B;;AACAD,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB;AAAA,WAAaf,GAAb,oBACEgB,MADF,EAEfhB,GAAG,MAAH,mBAFe;AAAA,GAArB;;AAKA,SAAOc,WAAP;AACD,CARqB,EAQnB,EARmB,CAAf;AAUP,eAAeJ,MAAf","sourcesContent":["import { css } from 'styled-components';\n\nconst Sizes = {\n  giant: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330\n};\n\n// iterate through the sizes and create a images template\nexport const Images = Object.keys(Sizes).reduce((accumulator, label) => {\n  const emSize = Sizes[label] / 16;\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n\nexport default Images;\n\n"]},"metadata":{},"sourceType":"module"}